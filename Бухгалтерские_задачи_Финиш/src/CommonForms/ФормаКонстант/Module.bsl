#Область ОбработчикиСобытийФормы

	&НаСервере
	Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
		ЗаполнитьЗначенияСвойств(ЭталонныйНабор, НаборКонстант);
	
	КонецПроцедуры
	
	&НаКлиенте
	Процедура ПослеЗаписи(ПараметрыЗаписи)
	
		ОбновитьИнтерфейс();
	
	КонецПроцедуры
	
	&НаСервере
	Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
		Если ЭталонныйНабор.СкладскойУчет <> НаборКонстант.СкладскойУчет Тогда
	
			ЭталонныйНабор.СкладскойУчет = НаборКонстант.СкладскойУчет;
	
			ОбработатьСубконтоСклады();
	
		КонецЕсли;
	
		Если ЭталонныйНабор.РасчетыПоДоговорам <> НаборКонстант.РасчетыПоДоговорам Тогда
	
			ЭталонныйНабор.РасчетыПоДоговорам = НаборКонстант.РасчетыПоДоговорам;
	
			ОбработатьСубконтоДоговоры();
	
		КонецЕсли;
	
		Если ЭталонныйНабор.УчетДДС <> НаборКонстант.УчетДДС Тогда
	
			ЭталонныйНабор.УчетДДС = НаборКонстант.УчетДДС;
	
			ОбработатьСубконтоДДС();
	
		КонецЕсли;
	
	КонецПроцедуры
	
#КонецОбласти


#Область ОбработкаСубконтоУСчетов
	&НаСервере
	Процедура ОбработатьСубконтоСклады()
	
		ВестиУчет = ПолучитьФункциональнуюОпцию("УчетПоСкладам");
	
		ВидСубконто = ?(ВестиУчет, ПланыВидовХарактеристик.ВидыСубконто.Номенклатура, ПланыВидовХарактеристик.ВидыСубконто.Склады);
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	СчетаВидыСубконто.Ссылка
			|ИЗ
			|	ПланСчетов.Счета.ВидыСубконто КАК СчетаВидыСубконто
			|ГДЕ
			|	СчетаВидыСубконто.ВидСубконто = &ВидСубконто";
	
		Запрос.УстановитьПараметр("ВидСубконто", ВидСубконто);
	
		РезультатЗапроса = Запрос.Выполнить();
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	
			ПС_Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	
			Если ВестиУчет Тогда
	
				Если ПС_Объект.ВидыСубконто.Количество() = 2 Тогда
					Продолжить;
				КонецЕсли;
	
				НоваяСтрока = ПС_Объект.ВидыСубконто.Добавить();
				НоваяСтрока.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Склады;
	
			Иначе
	
				СтрокаДляУдаления = ПС_Объект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.Склады, "ВидСубконто");
	
				ПС_Объект.ВидыСубконто.Удалить(СтрокаДляУдаления);
	
			КонецЕсли;
	
			ПС_Объект.Записать();
	
		КонецЦикла;
	
		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	КонецПроцедуры
	
	&НаСервере
	Процедура ОбработатьСубконтоДоговоры()
	
		ВестиУчет = ПолучитьФункциональнуюОпцию("РасчетыПоДоговорам");
	
		ВидСубконто = ?(ВестиУчет, ПланыВидовХарактеристик.ВидыСубконто.Контрагенты, ПланыВидовХарактеристик.ВидыСубконто.Договоры);
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	СчетаВидыСубконто.Ссылка
			|ИЗ
			|	ПланСчетов.Счета.ВидыСубконто КАК СчетаВидыСубконто
			|ГДЕ
			|	СчетаВидыСубконто.ВидСубконто = &ВидСубконто";
	
		Запрос.УстановитьПараметр("ВидСубконто", ВидСубконто);
	
		РезультатЗапроса = Запрос.Выполнить();
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	
			ПС_Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	
			Если ВестиУчет Тогда
	
				Если ПС_Объект.ВидыСубконто.Количество() = 2 Тогда
					Продолжить;
				КонецЕсли;
	
				НоваяСтрока = ПС_Объект.ВидыСубконто.Добавить();
				НоваяСтрока.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Договоры;
	
			Иначе
	
				СтрокаДляУдаления = ПС_Объект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.Договоры, "ВидСубконто");
	
				ПС_Объект.ВидыСубконто.Удалить(СтрокаДляУдаления);
	
			КонецЕсли;
	
			ПС_Объект.Записать();
	
		КонецЦикла;
	
	КонецПроцедуры
	
	&НаСервере
	Процедура ОбработатьСубконтоДДС()
	
		ВестиУчет = ПолучитьФункциональнуюОпцию("УчетДДС");
	
		Если ВестиУчет Тогда
	
			СписокСчетовУчетаДС = Новый СписокЗначений;
			СписокСчетовУчетаДС.Добавить(ПланыСчетов.Счета.Касса);
			СписокСчетовУчетаДС.Добавить(ПланыСчетов.Счета.СчетВБанке);
	
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
				|	Счета.Ссылка КАК Ссылка
				|ИЗ
				|	ПланСчетов.Счета КАК Счета
				|ГДЕ
				|	Счета.Ссылка В ИЕРАРХИИ(&СписокСчетовУчетаДС)";
	
			Запрос.УстановитьПараметр("СписокСчетовУчетаДС", СписокСчетовУчетаДС);
	
		Иначе
	
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
				|	СчетаВидыСубконто.Ссылка
				|ИЗ
				|	ПланСчетов.Счета.ВидыСубконто КАК СчетаВидыСубконто
				|ГДЕ
				|	СчетаВидыСубконто.ВидСубконто = &ВидСубконто";
	
			Запрос.УстановитьПараметр("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконто.ДвиженияДенежныхСредств);
	
		КонецЕсли;
	
		РезультатЗапроса = Запрос.Выполнить();
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	
			ПС_Объект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	
			Если ВестиУчет Тогда
	
				Если ПС_Объект.ВидыСубконто.Количество() = 2 Тогда
					Продолжить;
				КонецЕсли;
	
				НоваяСтрока = ПС_Объект.ВидыСубконто.Добавить();
				НоваяСтрока.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ДвиженияДенежныхСредств;
	
			Иначе
	
				СтрокаДляУдаления = ПС_Объект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ДвиженияДенежныхСредств, "ВидСубконто");
	
				ПС_Объект.ВидыСубконто.Удалить(СтрокаДляУдаления);
	
			КонецЕсли;
	
			ПС_Объект.Записать();
	
		КонецЦикла;
	
	КонецПроцедуры
#КонецОбласти

