
Процедура ПриЗаписи(Отказ)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланСчетов.Ссылка КАК Ссылка,
		|	ПланСчетов.Наименование КАК Наименование
		|ИЗ
		|	ПланСчетов.Бухгалтерский КАК ПланСчетов
		|ГДЕ
		|	ПланСчетов.Забалансовый = ЛОЖЬ
		|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.Номенклатура)
		|	И (&УчетПоСкладам
		|			ИЛИ ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.Склады))";
	
	Запрос.УстановитьПараметр("УчетПоСкладам", Константы.УчетПоСкладам.Получить() );
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		СчетСсылка = ВыборкаДетальныеЗаписи.Ссылка;
		
		Попытка
			
			ЗаблокироватьДанныеДляРедактирования(СчетСсылка);
			
			СчетОбъект = СчетСсылка.ПолучитьОбъект();

			
			ВидыСубконтоСчета = СчетОбъект.ВидыСубконто;
			
			СтрокаВидыСубконтоСклад = ВидыСубконтоСчета.Найти(
			ПланыВидовХарактеристик.ВидыСубконто.Склады, "ВидСубконто");
			
			Если СтрокаВидыСубконтоСклад = Неопределено И ВидыСубконтоСчета.Количество() < 2 Тогда
			
				 СтрокаВидыСубконтоСклад = ВидыСубконтоСчета.Добавить();
				 СтрокаВидыСубконтоСклад.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Склады;
				 
			ИначеЕсли Константы.УчетПоСкладам.Получить() = Ложь Тогда 	 
				
				ВидыСубконтоСчета.Удалить(СтрокаВидыСубконтоСклад);
				
			КонецЕсли;
			
			СчетОбъект.Записать();
		
		Исключение
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось изменить аналитику счета " + ВыборкаДетальныеЗаписи.Наименование;
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры
