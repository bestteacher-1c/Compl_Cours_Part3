Процедура ЗаполнитьПодразделениеСтороныПроводки(Движение, Подразделение, ДтКт) Экспорт

	Если (ЗначениеЗаполнено(Движение["Счет" + ДтКт]) = Ложь) Тогда
		Возврат;
	КонецЕсли;

	Если Движение["Счет" + ДтКт].ПоПодразделениям Тогда

		Движение["Подразделение" + ДтКт] = Подразделение;

	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСубконтоСтороныПроводки(Движение, ИмяИлиНомерСубконто, ЗначениеСубконто, ДтКт) Экспорт

	Если (ЗначениеЗаполнено(Движение["Счет" + ДтКт]) = Ложь) Тогда
		Возврат;
	КонецЕсли;

	Субконто = ПланыВидовХарактеристик.ВидыСубконто[ИмяИлиНомерСубконто];
	
	СтрокаСубконтоСчета = Движение["Счет" + ДтКт].ВидыСубконто.Найти(Субконто,"ВидСубконто" );
	
	Если СтрокаСубконтоСчета <> Неопределено Тогда
		
		Движение["Субконто" + ДтКт].Вставить( Субконто, ЗначениеСубконто);

			
	КонецЕсли;

КонецПроцедуры

// Процедура - Изменить активность движений
//
// Параметры:
//  Ссылка			 - ДокументСсылка	-  Может быть ссылка на любой документ
//  НужнаяАктивность - Булево	 -  По Умолчанию = Неопределено
//
Процедура ИзменитьАктивностьДвижений(Ссылка, НужнаяАктивность = Неопределено) Экспорт

	НЗ = РегистрыБухгалтерии.Проводки.СоздатьНаборЗаписей();
	НЗ.Отбор.Регистратор.Установить(Ссылка);

	НЗ.Прочитать();

	Если НужнаяАктивность = Неопределено Тогда

		Если НЗ.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		НужнаяАктивность = Не НЗ[0].Активность;

	КонецЕсли;

	НЗ.УстановитьАктивность(НужнаяАктивность);

	НЗ.Записать();

КонецПроцедуры