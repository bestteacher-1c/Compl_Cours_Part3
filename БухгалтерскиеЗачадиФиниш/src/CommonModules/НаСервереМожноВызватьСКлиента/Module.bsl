Функция ПолучитьСчетУчетаНоменклатуры(Номенклатура, Организация) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаУчетаНоменклатуры.СчетУчета,
	|	СчетаУчетаНоменклатуры.Организация,
	|	СчетаУчетаНоменклатуры.Номенклатура
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	РегистрСведений.СчетаУчетаНоменклатуры КАК СчетаУчетаНоменклатуры
	|ГДЕ
	|	СчетаУчетаНоменклатуры.Организация В (&Организация, &ПустаяОрганизация)
	|	И СчетаУчетаНоменклатуры.Номенклатура В (&ПустаяНоменклатура, &Номенклатура)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.СчетУчета
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|ГДЕ
	|	ВТДанные.Номенклатура = &Номенклатура
	|	И ВТДанные.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТДанные.СчетУчета
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|ГДЕ
	|	ВТДанные.Номенклатура = &Номенклатура
	|	И ВТДанные.Организация = &ПустаяОрганизация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТДанные.СчетУчета
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|ГДЕ
	|	ВТДанные.Номенклатура = &ПустаяНоменклатура
	|	И ВТДанные.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТДанные.СчетУчета
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|ГДЕ
	|	ВТДанные.Номенклатура = &ПустаяНоменклатура
	|	И ВТДанные.Организация = &ПустаяОрганизация";

	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПустаяНоменклатура", Справочники.Номенклатура.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Возврат ВыборкаДетальныеЗаписи.СчетУчета;

	КонецЦикла;

	Возврат ПланыСчетов.Счета.ПустаяСсылка();

КонецФункции // ПолучитьСчетУчетаНоменклатуры()

Функция ПересчитатьИзВалютыВВалюту(ВалютаИЗ, ВалютаВ, СуммаИз, Дата) Экспорт

	Если СуммаИз = 0 Тогда
		Возврат 0;
	КонецЕсли;

	Если ВалютаИЗ = Неопределено Или ВалютаИЗ = Справочники.Валюты.ПустаяСсылка() Тогда
		ВалютаИЗ = Справочники.Валюты.РубльРФ;
	КонецЕсли;

	Если ВалютаВ = Неопределено Или ВалютаИЗ = Справочники.Валюты.ПустаяСсылка() Тогда
		ВалютаВ = Справочники.Валюты.РубльРФ;
	КонецЕсли;

	Если ВалютаВ = ВалютаИЗ Тогда
		Возврат СуммаИз;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"	ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА КурсыВалютСрезПоследних.Валюта = &ВалютаВ
	|				ТОГДА КурсыВалютСрезПоследних.Курс
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КурсВ,
	|	СУММА(ВЫБОР
	|			КОГДА КурсыВалютСрезПоследних.Валюта = &ВалютаИз
	|				ТОГДА КурсыВалютСрезПоследних.Курс
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КурсИз
	|ПОМЕСТИТЬ ВТИсходная
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта В (&ВалютаИз, &ВалютаВ)) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР ВТИсходная.КурсВ
	|		КОГДА 0
	|			ТОГДА 0
	|		ИНАЧЕ &СуммаИЗ * ВТИсходная.КурсИз / ВТИсходная.КурсВ
	|	КОНЕЦ КАК СуммаВ
	|ИЗ
	|	ВТИсходная КАК ВТИсходная";

	Запрос.УстановитьПараметр("ВалютаИЗ", ВалютаИЗ);
	Запрос.УстановитьПараметр("ВалютаВ", ВалютаВ);
	Запрос.УстановитьПараметр("СуммаИЗ", СуммаИЗ);
	Запрос.УстановитьПараметр("Дата", Дата);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Возврат ВыборкаДетальныеЗаписи.СуммаВ;

	КонецЦикла;

	Возврат 0;

КонецФункции // ПересчитатьИзВалютыВВалюту()

Функция ПолучитьСвойствоСчета(Счет) Экспорт

	СвойстваСчета = Новый Структура;

	МаксКоличествоСубконто = Метаданные.ПланыСчетов.Счета.МаксКоличествоСубконто;
	СвойстваСчета.Вставить("МаксКоличествоСубконто", МаксКоличествоСубконто);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Счета.Ссылка.Забалансовый КАК Забалансовый,
	|	Счета.Ссылка.ПоПодразделениям КАК ПоПодразделениям,
	|	Счета.Ссылка.Количественный КАК Количественный,
	|	Счета.Ссылка.Валютный КАК Валютный,
	|	Счета.ВидыСубконто.(
	|		ВидСубконто,
	|		ВидСубконто.Наименование КАК Наименование,
	|		ВидСубконто.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|		ВидСубконто.ТипЗначения КАК ТипЗначения)
	|ИЗ
	|	ПланСчетов.Счета КАК Счета
	|ГДЕ
	|	Счета.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Счет);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаСчет = РезультатЗапроса.Выбрать();
	Пока ВыборкаСчет.Следующий() = Истина Цикл

		СвойстваСчета.Вставить("Забалансовый", ВыборкаСчет.Забалансовый);
		СвойстваСчета.Вставить("ПоПодразделениям", ВыборкаСчет.ПоПодразделениям);
		СвойстваСчета.Вставить("Количественный", ВыборкаСчет.Количественный);
		СвойстваСчета.Вставить("Валютный", ВыборкаСчет.Валютный);

		ВыборкаСубконто = ВыборкаСчет.ВидыСубконто.Выбрать();

		СвойстваСчета.Вставить("КоличествоСубконто", ВыборкаСубконто.Количество());

		Индекс = 1;

		Пока ВыборкаСубконто.Следующий() = Истина Цикл

			СвойстваСчета.Вставить("ВидСубконто" + Индекс, ВыборкаСубконто.ВидСубконто);
			СвойстваСчета.Вставить("ВидСубконто" + Индекс + "Наименование", ВыборкаСубконто.Наименование);
			СвойстваСчета.Вставить("ВидСубконто" + Индекс + "ИмяПредопределенныхДанных",
				ВыборкаСубконто.ИмяПредопределенныхДанных);
			СвойстваСчета.Вставить("ВидСубконто" + Индекс + "ТипЗначения", ВыборкаСубконто.ТипЗначения);

			Индекс = Индекс + 1;

		КонецЦикла;

	КонецЦикла;
	Возврат СвойстваСчета;

КонецФункции