Процедура ОбработкаПроведения(Отказ, Режим)

	Если (Константы.УчетПоСкладам.Получить() = Истина) Тогда
		ОбработкаПроведенияУчетПоСкладам(Отказ, Режим);
	Иначе
		ОбработкаПроведенияНетУчетаПоСкладам(Отказ, Режим);
	КонецЕсли;

	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Покупатели;

		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", Контрагент);

		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.Период = Дата;
		Движение.Сумма = ТекСтрокаУслуги.Сумма;
		Движение.Организация = Организация;
		Движение.Содержание = "выручка по услугам";

		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);

	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведенияНетУчетаПоСкладам(Отказ, Режим)

	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	ПВХ = ПланыВидовХарактеристик.ВидыСубконто;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(ПродажаТоваровТовары.НомерСтроки) КАК НомерСтроки,
		|	ПродажаТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ПродажаТоваровТовары.Количество) КАК Количество,
		|	СУММА(ПродажаТоваровТовары.Сумма) КАК Сумма
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ПродажаТоваров.Товары КАК ПродажаТоваровТовары
		|ГДЕ
		|	ПродажаТоваровТовары.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ПродажаТоваровТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.Номенклатура
		|ИЗ
		|	Товары КАК Товары";

	Результат = Запрос.Выполнить();

	Блокировка = Новый БлокировкаДанных();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока (ВыборкаДетальныеЗаписи.Следующий() = Истина) Цикл

		ЭлементБД = Блокировка.Добавить("РегистрБухгалтерии.Проводки");
		ЭлементБД.УстановитьЗначение("Период", Новый Диапазон(, Дата));
		ЭлементБД.УстановитьЗначение("Счет", ПланыСчетов.Бухгалтерский.Товары);
		ЭлементБД.УстановитьЗначение("Организация", Организация);
		ЭлементБД.УстановитьЗначение("Подразделение", Подразделение);
		ЭлементБД.УстановитьЗначение(ПВХ.Номенклатура, ВыборкаДетальныеЗаписи.Номенклатура);
		ЭлементБД.Режим = РежимБлокировкиДанных.Исключительный;

	КонецЦикла;

	Блокировка.Заблокировать();

	Движения.Проводки.Записать();

	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПВХ.Номенклатура);

	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	Запрос.УстановитьПараметр("Период", МоментВремени());

	Запрос.Текст = "ВЫБРАТЬ
		|	ПроводкиОстатки.Субконто1 КАК Субконто1,
		|	ПроводкиОстатки.СуммаОстатокДт,
		|	ПроводкиОстатки.КоличествоОстатокДт
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	РегистрБухгалтерии.Проводки.Остатки(&Период, Счет = ЗНАЧЕНИЕ(ПланСчетов.Бухгалтерский.Товары), &ВидыСубконто,
		|		Субконто1 В
		|		(ВЫБРАТЬ
		|			Товары.Номенклатура
		|		ИЗ
		|			Товары КАК Товары)
		|	И Подразделение = &Подразделение
		|	И Организация = &Организация
		|	) КАК ПроводкиОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	Товары.Номенклатура,
		|	Товары.Количество,
		|	Товары.Сумма,
		|	ЕСТЬNULL(Остатки.СуммаОстатокДт, 0) КАК ОстСум,
		|	ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0) КАК ОстКол
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
		|		ПО Товары.Номенклатура = Остатки.Субконто1";

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Движения.Проводки.Записывать = Истина;

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Себестоимость = 0;

		Если (ВыборкаДетальныеЗаписи.ОстКол < ВыборкаДетальныеЗаписи.Количество) Тогда

			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Не хватает " + ВыборкаДетальныеЗаписи.Номенклатура;
			Сообщение.Поле = "Товары[" + (ВыборкаДетальныеЗаписи.НомерСтроки - 1)
				+ "].Количество";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();

		ИначеЕсли (ВыборкаДетальныеЗаписи.ОстКол = ВыборкаДетальныеЗаписи.Количество) Тогда
			Себестоимость = ВыборкаДетальныеЗаписи.ОстСум;
		Иначе
			Себестоимость = ВыборкаДетальныеЗаписи.ОстСум
				/ ВыборкаДетальныеЗаписи.ОстКол * ВыборкаДетальныеЗаписи.Количество;
		КонецЕсли;

		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Покупатели;

		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", Контрагент);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Договоры", Договор);

		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.Период = Дата;
		Движение.Сумма = ВыборкаДетальныеЗаписи.Сумма;
		Движение.Организация = Организация;
		Движение.Содержание = "выручка по товарам";

		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Товары;

		БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Склады", Склад);

		Движение.КоличествоКт = ВыборкаДетальныеЗаписи.Количество;

		Движение.Период = Дата;
		Движение.Сумма = Себестоимость;
		Движение.Организация = Организация;
		Движение.Содержание = "себестоимость";

		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);

	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведенияУчетПоСкладам(Отказ, Режим)

	Если (Константы.СуммовойУчетПоСкладам.Получить() = Ложь) Тогда

		ОбработкаПроведенияУчетПоСкладамБезСуммовогоУчета(Режим, Отказ);

		Возврат;

	КонецЕсли;

	//Суммовой учет по складам !!
	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	ПВХ = ПланыВидовХарактеристик.ВидыСубконто;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(ПродажаТоваровТовары.НомерСтроки) КАК НомерСтроки,
		|	ПродажаТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ПродажаТоваровТовары.Количество) КАК Количество,
		|	СУММА(ПродажаТоваровТовары.Сумма) КАК Сумма
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ПродажаТоваров.Товары КАК ПродажаТоваровТовары
		|ГДЕ
		|	ПродажаТоваровТовары.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ПродажаТоваровТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.Номенклатура
		|ИЗ
		|	Товары КАК Товары";

	Результат = Запрос.Выполнить();

	Блокировка = Новый БлокировкаДанных();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока (ВыборкаДетальныеЗаписи.Следующий() = Истина) Цикл

		ЭлементБД = Блокировка.Добавить("РегистрБухгалтерии.Проводки");
		ЭлементБД.УстановитьЗначение("Период", Новый Диапазон(, Дата));
		ЭлементБД.УстановитьЗначение("Счет", ПланыСчетов.Бухгалтерский.Товары);
		ЭлементБД.УстановитьЗначение("Организация", Организация);
		ЭлементБД.УстановитьЗначение("Подразделение", Подразделение);
		ЭлементБД.УстановитьЗначение(ПВХ.Номенклатура, ВыборкаДетальныеЗаписи.Номенклатура);
		ЭлементБД.УстановитьЗначение(ПВХ.Склады, Склад);
		ЭлементБД.Режим = РежимБлокировкиДанных.Исключительный;

	КонецЦикла;

	Блокировка.Заблокировать();

	Движения.Проводки.Записать();

	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПВХ.Номенклатура);
	ВидыСубконто.Добавить(ПВХ.Склады);

	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	Запрос.УстановитьПараметр("Период", МоментВремени());

	Запрос.Текст = "ВЫБРАТЬ
		|	ПроводкиОстатки.Субконто1 КАК Субконто1,
		|	ПроводкиОстатки.СуммаОстатокДт,
		|	ПроводкиОстатки.КоличествоОстатокДт
		|ПОМЕСТИТЬ Остатки
		|ИЗ
		|	РегистрБухгалтерии.Проводки.Остатки(&Период, Счет = ЗНАЧЕНИЕ(ПланСчетов.Бухгалтерский.Товары), &ВидыСубконто,
		|		Субконто1 В
		|		(ВЫБРАТЬ
		|			Товары.Номенклатура
		|		ИЗ
		|			Товары КАК Товары)
		|	И Подразделение = &Подразделение
		|	И Организация = &Организация
		|	И Субконто2 = &Склад) КАК ПроводкиОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	Товары.Номенклатура,
		|	Товары.Количество,
		|	Товары.Сумма,
		|	ЕСТЬNULL(Остатки.СуммаОстатокДт, 0) КАК ОстСум,
		|	ЕСТЬNULL(Остатки.КоличествоОстатокДт, 0) КАК ОстКол
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
		|		ПО Товары.Номенклатура = Остатки.Субконто1";

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Движения.Проводки.Записывать = Истина;

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Себестоимость = 0;

		Если (ВыборкаДетальныеЗаписи.ОстКол < ВыборкаДетальныеЗаписи.Количество) Тогда

			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Не хватает " + ВыборкаДетальныеЗаписи.Номенклатура;
			Сообщение.Поле = "Товары[" + (ВыборкаДетальныеЗаписи.НомерСтроки - 1)
				+ "].Количество";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();

		ИначеЕсли (ВыборкаДетальныеЗаписи.ОстКол = ВыборкаДетальныеЗаписи.Количество) Тогда
			Себестоимость = ВыборкаДетальныеЗаписи.ОстСум;
		Иначе
			Себестоимость = ВыборкаДетальныеЗаписи.ОстСум
				/ ВыборкаДетальныеЗаписи.ОстКол * ВыборкаДетальныеЗаписи.Количество;
		КонецЕсли;

		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Покупатели;

		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", Контрагент);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Договоры", Договор);

		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.Период = Дата;
		Движение.Сумма = ВыборкаДетальныеЗаписи.Сумма;
		Движение.Организация = Организация;
		Движение.Содержание = "выручка по товарам";

		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Товары;

		БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Склады", Склад);

		Движение.КоличествоКт = ВыборкаДетальныеЗаписи.Количество;

		Движение.Период = Дата;
		Движение.Сумма = Себестоимость;
		Движение.Организация = Организация;
		Движение.Содержание = "себестоимость";

		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);

	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведенияУчетПоСкладамБезСуммовогоУчета(Отказ, Режим)

	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	ПВХ = ПланыВидовХарактеристик.ВидыСубконто;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(ПродажаТоваровТовары.НомерСтроки) КАК НомерСтроки,
		|	ПродажаТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ПродажаТоваровТовары.Количество) КАК Количество,
		|	СУММА(ПродажаТоваровТовары.Сумма) КАК Сумма
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ПродажаТоваров.Товары КАК ПродажаТоваровТовары
		|ГДЕ
		|	ПродажаТоваровТовары.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ПродажаТоваровТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.Номенклатура
		|ИЗ
		|	Товары КАК Товары";

	Результат = Запрос.Выполнить();

	Блокировка = Новый БлокировкаДанных();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока (ВыборкаДетальныеЗаписи.Следующий() = Истина) Цикл

		ЭлементБД = Блокировка.Добавить("РегистрБухгалтерии.Проводки");
		ЭлементБД.УстановитьЗначение("Период", Новый Диапазон(, Дата));
		ЭлементБД.УстановитьЗначение("Счет", ПланыСчетов.Бухгалтерский.Товары);
		ЭлементБД.УстановитьЗначение("Организация", Организация);
		ЭлементБД.УстановитьЗначение("Подразделение", Подразделение);
		ЭлементБД.УстановитьЗначение(ПВХ.Номенклатура, ВыборкаДетальныеЗаписи.Номенклатура);
		//ЭлементБД.УстановитьЗначение(ПВХ.Склады, Склад);
		ЭлементБД.Режим = РежимБлокировкиДанных.Исключительный;

	КонецЦикла;

	Блокировка.Заблокировать();

	Движения.Проводки.Записать();

	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПВХ.Номенклатура);
	ВидыСубконто.Добавить(ПВХ.Склады);

	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	Запрос.УстановитьПараметр("Период", МоментВремени());

	Запрос.Текст = "ВЫБРАТЬ
		|	ПроводкиОстатки.Субконто1 КАК Субконто1,
		|	ПроводкиОстатки.КоличествоОстатокДт КАК КоличествоОстатокДт
		|ПОМЕСТИТЬ ОстаткиСклад
		|ИЗ
		|	РегистрБухгалтерии.Проводки.Остатки(
		|			&Период,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Бухгалтерский.Товары),
		|			&ВидыСубконто,
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						Товары.Номенклатура
		|					ИЗ
		|						Товары КАК Товары)
		|				И Подразделение = &Подразделение
		|				И Организация = &Организация
		|				И Субконто2 = &Склад) КАК ПроводкиОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПроводкиОстатки.Субконто1 КАК Субконто1,
		|	ПроводкиОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
		|	ПроводкиОстатки.КоличествоОстатокДт КАК КоличествоОстатокДт
		|ПОМЕСТИТЬ ОстаткиВсе
		|ИЗ
		|	РегистрБухгалтерии.Проводки.Остатки(
		|			&Период,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Бухгалтерский.Товары),
		|			&ВидыСубконто,
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						Товары.Номенклатура
		|					ИЗ
		|						Товары КАК Товары)
		|				И Подразделение = &Подразделение
		|				И Организация = &Организация) КАК ПроводкиОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Количество КАК Количество,
		|	Товары.Сумма КАК Сумма,
		|	ЕСТЬNULL(ОстаткиВсе.СуммаОстатокДт, 0) КАК ОстСум,
		|	ЕСТЬNULL(ОстаткиВсе.КоличествоОстатокДт, 0) КАК ОстКол,
		|	ЕСТЬNULL(ОстаткиСклад.КоличествоОстатокДт, 0) КАК ОстКолСклад
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиСклад КАК ОстаткиСклад
		|		ПО Товары.Номенклатура = ОстаткиСклад.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиВсе КАК ОстаткиВсе
		|		ПО Товары.Номенклатура = ОстаткиВсе.Субконто1";

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Движения.Проводки.Записывать = Истина;

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Себестоимость = 0;

		Если (ВыборкаДетальныеЗаписи.ОстКолСклад < ВыборкаДетальныеЗаписи.Количество) Тогда

			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Не хватает " + ВыборкаДетальныеЗаписи.Номенклатура;
			Сообщение.Поле = "Товары[" + (ВыборкаДетальныеЗаписи.НомерСтроки - 1)
				+ "].Количество";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();

		ИначеЕсли (ВыборкаДетальныеЗаписи.ОстКол = ВыборкаДетальныеЗаписи.Количество) Тогда
			Себестоимость = ВыборкаДетальныеЗаписи.ОстСум;
		Иначе
			Себестоимость = ВыборкаДетальныеЗаписи.ОстСум
				/ ВыборкаДетальныеЗаписи.ОстКол * ВыборкаДетальныеЗаписи.Количество;
		КонецЕсли;

		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Покупатели;

		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", Контрагент);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Договоры", Договор);

		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.Период = Дата;
		Движение.Сумма = ВыборкаДетальныеЗаписи.Сумма;
		Движение.Организация = Организация;
		Движение.Содержание = "выручка по товарам";

		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Товары;

		БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Склады", Склад);

		Движение.КоличествоКт = ВыборкаДетальныеЗаписи.Количество;

		Движение.Период = Дата;
		Движение.Сумма = Себестоимость;
		Движение.Организация = Организация;
		Движение.Содержание = "себестоимость";

		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);

	КонецЦикла;

КонецПроцедуры
