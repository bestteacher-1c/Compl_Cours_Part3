Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ПолучитьФункциональнуюОпцию("УчетПоПодразделениям"
		, Новый Структура("ПФО_Организация", Организация)) = Ложь Тогда
	
		Индекс = ПроверяемыеРеквизиты.Найти("ПодразделениеОтправитель");
		ПроверяемыеРеквизиты.Удалить(Индекс);
		
		Индекс = ПроверяемыеРеквизиты.Найти("ПодразделениеПолучатель");
		ПроверяемыеРеквизиты.Удалить(Индекс);
	
	КонецЕсли;                      
	
	
	Если ПолучитьФункциональнуюОпцию("УчетПоСкладам") = Ложь Тогда
		
		ПроверяемыеРеквизиты.Добавить("СкладОтправитель");
		ПроверяемыеРеквизиты.Добавить("СкладПолучатель");
		
	КонецЕсли;                      
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	
	//В учебных целях (для упрощения) делаем допущение, что складской учет ведется.
	
	//--ОЧИСТКА ДВИЖЕНИЙ ЭТОГО ДОКУМЕНТА В БАЗЕ ДАННЫХ
	
	Движения.Проводки.Записывать = Истина;
	Движения.Записать();
	
	//--БЛОКИРОВКА
	
	Блокировка = Новый БлокировкаДанных;
	
	ЧтоБлокируем = Блокировка.Добавить("РегистрБухгалтерии.Проводки");
	ЧтоБлокируем.Режим = РежимБлокировкиДанных.Исключительный;
	
	Для каждого ТекСтрока Из Товары Цикл
		
		ЧтоБлокируем.УстановитьЗначение("Счет", ТекСтрока.СчетУчета);
		ЧтоБлокируем.УстановитьЗначение("Организация", Организация);
		ЧтоБлокируем.УстановитьЗначение("Подразделение", ПодразделениеОтправитель);
		
		Если ТекСтрока.СчетУчета.ВидыСубконто.Получить(0).ВидСубконто 
			= ПланыВидовХарактеристик.ВидыСубконто.Номенклатура Тогда
			
			ЧтоБлокируем.УстановитьЗначение("Субконто1", ТекСтрока.Номенклатура);
			ЧтоБлокируем.УстановитьЗначение("Субконто2", СкладОтправитель);
			
		Иначе
			
			ЧтоБлокируем.УстановитьЗначение("Субконто1", СкладОтправитель);
			ЧтоБлокируем.УстановитьЗначение("Субконто2", ТекСтрока.Номенклатура);
			
		КонецЕсли;
		
	КонецЦикла; 
	
	
	// ---  ЗАПРОС
	
	ПорядокСубконто = Новый Массив;
	ПорядокСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	ПорядокСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Склады);
	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ПорядокСубконто", ПорядокСубконто);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", МоментВремени());
	Запрос.УстановитьПараметр("Склад", СкладОтправитель);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Подразделение", ПодразделениеОтправитель);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.СчетУчета,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТДокумент
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.СчетУчета,
	|	ПеремещениеТоваровТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроводкиОстатки.Счет,
	|	ПроводкиОстатки.Субконто1,
	|	ПроводкиОстатки.СуммаОстатокДт,
	|	ПроводкиОстатки.КоличествоОстатокДт
	|ПОМЕСТИТЬ ВТОстаткиСклад
	|ИЗ
	|	РегистрБухгалтерии.Проводки.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТДокумент.СчетУчета
	|				ИЗ
	|					ВТДокумент КАК ВТДокумент),
	|			&ПорядокСубконто,
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И Субконто2 = &Склад
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						ВТДокумент.Номенклатура
	|					ИЗ
	|						ВТДокумент КАК ВТДокумент)) КАК ПроводкиОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокумент.Номенклатура,
	|	ВТДокумент.СчетУчета,
	|	ВТДокумент.Количество КАК ДокКол,
	|	ЕСТЬNULL(ВТОстаткиСклад.КоличествоОстатокДт, 0) КАК РегКол
	|ИЗ
	|	ВТДокумент КАК ВТДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиСклад КАК ВТОстаткиСклад
	|		ПО ВТДокумент.СчетУчета = ВТОстаткиСклад.Счет
	|			И ВТДокумент.Номенклатура = ВТОстаткиСклад.Субконто1";
	
	
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		//--ПРОВЕРКА НАЛИЧИЯ УЧТЕННОГО ТМЦ ПО СЧЕТУ НА СКЛАДЕ
		
		Нехватка = Выборка.ДокКол - Выборка.РегКол;
		
		Если Нехватка > 0 Тогда
			
			Отказ = Истина;
			
			Сообщение = Новый СообщениеПользователю;
			
			Сообщение.Текст = "Для проведения по данным бухгалтерского учета по счету "
			+ Выборка.СчетУчета + " на складе " + СкладОтправитель + " не хватает номенклатуры """
			+ Выборка.Номенклатура + """. Нехватка составляет " + Нехватка + " ед.";
			
			Сообщение.Сообщить();
			
		КонецЕсли; 
		
	КонецЦикла;
	
	Если Не Отказ Тогда
		
		Движения.Проводки.Записывать = Истина;
		
		Для каждого ТекСтрокаТовары Из Товары Цикл
			
			Движение = Движения.Проводки.Добавить();
			
			//--Общие для проводки -----
			Движение.Период = Дата;
			//Движение.Сумма = ТекСтрокаТовары.Стоимость;
			Движение.СодержаниеПроводки = "Перемещение ТМЦ";
			Движение.Организация = Организация;
			
			//--Дебет -----
			Движение.СчетДт = ТекСтрокаТовары.НовыйСчетУчета;
			Серверный.ЗаполнитьПодразделениеСтороныПроводки(Движение,ПодразделениеПолучатель,"Дт");
			
			Серверный.ЗаполнитьСубконтоСтороныПроводки(Движение,"Номенклатура", ТекСтрокаТовары.Номенклатура, "Дт");
			Серверный.ЗаполнитьСубконтоСтороныПроводки(Движение,"Склады", СкладПолучатель, "Дт");
			
			Серверный.ЗаполнитьКоличествоСтороныПроводки(Движение, ТекСтрокаТовары.Количество, "Дт");
			
			//--Кредит ----
			Движение.СчетКт = ТекСтрокаТовары.СчетУчета;
			Серверный.ЗаполнитьПодразделениеСтороныПроводки(Движение,ПодразделениеОтправитель,"Кт");
			
			Серверный.ЗаполнитьСубконтоСтороныПроводки(Движение,"Номенклатура", ТекСтрокаТовары.Номенклатура, "Кт");
			Серверный.ЗаполнитьСубконтоСтороныПроводки(Движение,"Склады", СкладОтправитель, "Кт");
			
			Серверный.ЗаполнитьКоличествоСтороныПроводки(Движение, ТекСтрокаТовары.Количество, "Кт");
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры


