

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭталонныйНабор, НаборКонстант);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НаборКонстант.СкладскойУчет <> ЭталонныйНабор.СкладскойУчет Тогда
		
		ЭталонныйНабор.СкладскойУчет = НаборКонстант.СкладскойУчет; //Защита от повторного нажатия кнопки записать без изменения флага
		
		ПриИзмененииУчетаПоСкладам(НаборКонстант.СкладскойУчет);
		
	КонецЕсли;
	
	Если НаборКонстант.РасчетыПоДоговорам <> ЭталонныйНабор.РасчетыПоДоговорам Тогда
		
		ЭталонныйНабор.СкладскойУчет = НаборКонстант.СкладскойУчет; //Защита от повторного нажатия кнопки записать без изменения флага
		
		ПриИзмененииРасчетовПоДоговорам(НаборКонстант.РасчетыПоДоговорам);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииУчетаПоСкладам(УчитыватьСклады)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СсылкаНаПВХ_Номенклатура"
	, ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	
	Запрос.УстановитьПараметр("СсылкаНаПВХ_Склады"
	, ПланыВидовХарактеристик.ВидыСубконто.Склады);
	
	Запрос.УстановитьПараметр("УчетПоСкладам", УчитыватьСклады);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Счета.Ссылка
	|ИЗ
	|	ПланСчетов.Счета КАК Счета
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &УчетПоСкладам = ИСТИНА
	|				ТОГДА Счета.ВидыСубконто.ВидСубконто = &СсылкаНаПВХ_Номенклатура
	|			ИНАЧЕ Счета.ВидыСубконто.ВидСубконто = &СсылкаНаПВХ_Склады
	|		КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СчетОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если УчитыватьСклады Тогда
			//Добавить субконто склад
			Если  СчетОбъект.ВидыСубконто.Количество() = 1 Тогда
			
				НоваяСтрока = СчетОбъект.ВидыСубконто.Добавить();
				НоваяСтрока.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Склады;

			КонецЕсли;
			
		Иначе	
			//Удалить субконто склад
			
			СтрокаТЧ = СчетОбъект.ВидыСубконто.Найти(
			ПланыВидовХарактеристик.ВидыСубконто.Склады,"ВидСубконто");
			
			СчетОбъект.ВидыСубконто.Удалить(СтрокаТЧ);
			
		КонецЕсли;
		
		СчетОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры // ПриИзмененииУчетаПоСкладам()

&НаСервере
Процедура ПриИзмененииРасчетовПоДоговорам(УчитыватьДоговоры)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СсылкаНаПВХ_Контрагенты", ПланыВидовХарактеристик.ВидыСубконто.Контрагенты);
	Запрос.УстановитьПараметр("СсылкаНаПВХ_Договоры", ПланыВидовХарактеристик.ВидыСубконто.Договоры);
	Запрос.УстановитьПараметр("УчетПоДоговорам", УчитыватьДоговоры);
	Запрос.УстановитьПараметр("СчетРасчетыСУчредителями", ПланыСчетов.Счета.РасчетыСУчредителями);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Счета.Ссылка,
	|	Счета.Представление
	|ИЗ
	|	ПланСчетов.Счета КАК Счета
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &УчетПоДоговорам = ИСТИНА
	|				ТОГДА Счета.ВидыСубконто.ВидСубконто = &СсылкаНаПВХ_Контрагенты
	|			ИНАЧЕ Счета.ВидыСубконто.ВидСубконто = &СсылкаНаПВХ_Договоры
	|		КОНЕЦ
	|	И Счета.Ссылка <> &СчетРасчетыСУчредителями";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СчетОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если УчитыватьДоговоры Тогда
			//Добавить субконто склад
			Если  СчетОбъект.ВидыСубконто.Количество() = 1 Тогда
			
				НоваяСтрока = СчетОбъект.ВидыСубконто.Добавить();
				НоваяСтрока.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Договоры;

			КонецЕсли;
			
		Иначе	
			//Удалить субконто склад
			
			СтрокаТЧ = СчетОбъект.ВидыСубконто.Найти(
			ПланыВидовХарактеристик.ВидыСубконто.Договоры,"ВидСубконто");
			
			СчетОбъект.ВидыСубконто.Удалить(СтрокаТЧ);
			
		КонецЕсли;
		
		СчетОбъект.Записать();
		
	КонецЦикла;

КонецПроцедуры // ПриИзмененииУчетаПоСкладам()
